pipeline
{

agent any

//it is used for s/w to run the that commands so we have speceify here
tools
{
maven "maven3.8.4"
}

//Poll SCM automatically form git 
triggers 
{
  pollSCM('* * * * *')
}

//how many builds we can display

options 
{
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '3', daysToKeepStr: '', numToKeepStr: '3')

// To display time stamp in console output

timestamps()

}

  stages
   { 
    //get code from github
    stage('CheckOutCodeGit')
     {
       steps
       {
        SendSlackNotifications('STARTED')
        git branch: 'development', credentialsId: '1b7556db-d21f-4936-8055-026a19859eed', url: 'https://github.com/cts-DevopsTraining/maven-web-application.git'
       } 
     }

     //Build stage

     stage('Build')
     {
      steps
      {
     sh "mvn clean package"
      }
     }

     //Execute Sonarqube

      stage('ExecuteSonarQube')
     {
      steps
       {
       sh "mvn sonar:sonar"
       } 
     } 

     //Upload artifacts into Neuxs repository

      stage('UploadArtifactstintoNeuxs')
     {
      steps
       {
       sh "mvn deploy"
       } 
     }

     //Deploying app to tomcat server

      stage('DeployingAppintoTomcat')
     {
      steps
       {
       sshagent(['29e2818e-773b-41ee-ab4f-1cde83020bf5']) 
         {
          sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.234.116.214:/opt/apache-tomcat-9.0.63/webapps"
         }
       } 
     }

   } //Stages Closing
   
// Here we have to provide slack related notifications funcations calling

post {
  success {
    SendSlackNotifications('SUCCESSFUL')
  }
  failure 
  {
    SendSlackNotifications('FAILURE')
  }
}


} // Pipeline closing

//below code is for send slack notifications

def SendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'walmart') //particularly walmart channel we are send notification
}

