node{

//We have to keep variables to display only inside node level

echo "The job name is :${env.JOB_NAME}"
echo "The Node name is :${env.NODE_NAME}"
echo "The build number is :${env.BUILD_NUMBER}"

//We have give SCM changes in inside node level only

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

def mavenHome= tool name: "maven3.8.4"

try
{
SendSlackNotifications('STARTED')
stage('CheckOutCodeGit')
{
git branch: 'development', credentialsId: '1b7556db-d21f-4936-8055-026a19859eed', url: 'https://github.com/cts-DevopsTraining/maven-web-application.git'
}

stage('Build')
{
sh "${mavenHome}/bin/mvn clean package"
}

/*
stage('ExecuteSonarQubeReport')
{
sh "${mavenHome}/bin/mvn sonar:sonar"
}

stage('UploadArtifatcsIntoNexus')
{
sh "${mavenHome}/bin/mvn deploy"
}

stage('DeployAppintoTomcat')
{

sshagent(['29e2818e-773b-41ee-ab4f-1cde83020bf5']) 
 {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.46.77:/opt/apache-tomcat-9.0.63/webapps"
 }
}

*/
} // try block closing
catch(e)
{
currentBuild.result = "FAILED"
   throw e
} //Catch block closing

finally
{
SendSlackNotifications(currentBuild.result)
} //Finally block closing


} // node closing

//sending slack notification
def SendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'walmart')
}


